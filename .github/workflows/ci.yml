name: Go CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.4'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install dependencies
      run: go mod download

    - name: Build
      run: go build -v ./...

    - name: Run tests and generate coverage
      run: |
        go test -v -coverprofile=coverage.raw.out ./...
        grep -v 'cmd/main.go' coverage.raw.out > coverage.out

    - name: Upload coverage artifact
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage.out

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        files: coverage.out

    - name: Check formatting
      run: gofmt -l . | tee /tmp/gofmt.out; test ! -s /tmp/gofmt.out

    - name: Static analysis (go vet)
      run: go vet ./...

    - name: Lint (optional, if you use golangci-lint)
      uses: golangci/golangci-lint-action@v4
      with:
        version: v1.55.2
        args: --timeout=5m
      continue-on-error: true